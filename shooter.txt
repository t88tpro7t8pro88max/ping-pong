from pygame import *
from random import randint

win_width, win_height = 700, 500
window = display.set_mode((win_width, win_height))
display.set_caption('шутер')
background = transform.scale(image.load('galaxy.jpg'), (win_width, win_height))

mixer.init()
mixer.music.load('space.ogg')
mixer.music.play()
fire = mixer.Sound('fire.ogg')


font.init()
font = font.Font(None, 36)

win = font.render('YOU WIN!', True, (255, 215, 0))
lose = font.render('YOU LOSE!', True, (255, 215, 0))

goal = 10
score = 0
lost = 0
max_lost = 3


class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x > 5:
            self.rect.x -= self.speed
        if keys[K_RIGHT] and self.rect.x < win_width - 80:
            self.rect.x += self.speed
    def fire(self):
        bullet = Bulet('bullet.png', self.rect.centerx, self.rect.top, 15, 20, -15)
        bullets.add(bullet)

class Enemy(GameSprite):
    def update(self):
        self.rect.y += self.speed
        global lost
        if self.rect.y > win_height:
            self.rect.x = randint(80, win_width - 80)
            self.rect.y = 0
            lost = lost + 1


class Bulet(GameSprite):
    def update (self):
        self.rect.y += self.speed
        if self.rect.y < 0:
            self.kill()


class Asteroids(GameSprite):
     def update(self):
        self.rect.y += self.speed
        if self.rect.y > win_height:
            self.rect.x = randint(80, win_width - 80)
            self.rect.y = 0


bullets = sprite.Group()
ship = Player("rocket.png", 5, win_height-100, 80, 100, 8)
monsters = sprite.Group()
asteroids = sprite.Group()
for i in range(1, 6):
    monster = Enemy('ufo.png', randint(80, win_width - 80), -40, 80, 50, randint(1, 1))
    asteroid = Asteroids('asteroid.png', randint(80, win_width - 80), -40, 80, 50, randint(1, 1)) 
    asteroids.add(asteroid)
    monsters.add(monster)
    


clock = time.Clock()
game = True
finish = False
 
while game:
    for e in event.get():
        if e.type == QUIT:
            game = False
        elif e.type == KEYDOWN:
            if e.key == K_SPACE:
                fire.play()
                ship.fire()
    

    if finish != True:
        window.blit(background, (0,0))
        text = font.render('Счёт:' + str(score), 1, (225, 255, 255))
        window.blit(text, (10, 20))


        text_lose = font.render('Пропущено:' + str(lost), 1, (225, 255, 255))
        window.blit(text_lose, (10, 50))


        ship.update()
        monsters.update()
        monsters.draw(window)
        asteroids.update()
        asteroids.draw(window)
        bullets.draw(window)
        bullets.update()
        ship.reset()

        kalid = sprite.groupcollide(monsters, bullets, True, True)
        for c in kalid:
            score = score + 1
            monster = Enemy('ufo.png', randint(80, win_width - 80), -40, 80, 50, randint(1, 1))
            monsters.add(monster)
        
        if sprite.spritecollide(ship, monsters, False) or sprite.spritecollide(ship, asteroids, False) or lost >= max_lost:
            finish = True
            window.blit(lose, (200, 200))
        if score >= goal:
            finish = True
            window.blit(win, (200, 200))

    display.update()
time.delay(50)
